<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xyz.liujin.finalysis.analysis.mapper.AvgLineMapper">
    <select id="getLatestDate" resultType="java.time.LocalDate">
        SELECT date
        FROM avg_line
        order by date desc
        limit 1;
    </select>

    <insert id="saveBatchByCodeDateStatistic" parameterType="java.util.List">
        insert into avg_line
        (stock_code, date, statistic, current, avg)
        values
        <foreach item="item" index="i" collection="avgLines" separator=",">
            (#{item.stockCode}, #{item.date}, #{item.statistic}, #{item.current}, #{item.avg})
        </foreach>
        on conflict (stock_code, date, statistic) do update set
        current = excluded.current,
        avg = excluded.avg
    </insert>

    <select id="findDayAvg" resultType="xyz.liujin.finalysis.analysis.dto.DayAvgLine">
        select stock_code,
               date,
               current,
               sum(case statistic when 5 then avg else 0 end) as avg5,
               sum(case statistic when 10 then avg else 0 end) as avg10,
               sum(case statistic when 20 then avg else 0 end) as avg20,
               sum(case statistic when 30 then avg else 0 end) as avg30
        from avg_line
        <where>
            <if test="start != null">
                and date >= #{start}
            </if>
            <if test="end != null">
                and date &lt;= #{end}
            </if>
            <if test="stockCodes != null">
                and stock_code in
                <foreach collection="stockCodes" item="code"
                         open="(" separator="," close=")">
                    #{code}
                </foreach>
            </if>
        </where>
        group by stock_code, date, current
        <if test="limit != null and limit != 0">
            limit #{limit}
        </if>
    </select>
</mapper>