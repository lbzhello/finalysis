<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xyz.liujin.finalysis.daily.mapper.AvgLineMapper">
    <!-- 获取股票趋势，增长或减小 -->
    <select id="trend" resultType="java.lang.String">
        select stock_code from stock
        where stock_code not in (
            select distinct t1.stock_code from avg_line as t1, avg_line as t2
            where t1.date >= #{start} and t1.date &lt;= #{end}
            and t1.stock_code = t2.stock_code
            and t1.date = t2.date
            and t1.statistic = #{highStats}
            and t2.statistic = #{lowStats}
            and t1.avg &lt; t2.avg
        )
        order by stock_code;
    </select>

    <!-- 获取 5 日线大于 10 日线的股票 -->
    <select id="trend5Up10" resultType="java.lang.String">
        select stock_code from stock as s
        where not exists (
            select * from v_avg_line
            where stock_code = s.stock_code
            and date >= #{start} and date &lt;= #{end}
            and avg5 &lt; avg10
        )
        order by stock_code;
    </select>

    <!-- 获取数据库最新日期 -->
    <select id="getLatestDate" resultType="java.time.LocalDate">
        select date
        from v_avg_line
        order by date desc
        limit 1;
    </select>

    <!-- 批量保存，如果冲突（stock_code, date, statistic）则更新 -->
    <insert id="saveBatchByCodeDateStatistic" parameterType="java.util.List">
        insert into avg_line
        (stock_code, date, statistic, current, avg)
        values
        <foreach item="item" index="i" collection="avgLines" separator=",">
            (#{item.stockCode}, #{item.date}, #{item.statistic}, #{item.current}, #{item.avg})
        </foreach>
        on conflict (stock_code, date, statistic) do update set
        current = excluded.current,
        avg = excluded.avg
    </insert>

    <!-- 获取股票日均线 -->
    <select id="findDayAvg" resultType="xyz.liujin.finalysis.daily.dto.DayAvgLine">
        select stock_code,
               date,
               current,
               sum(case statistic when 5 then avg else 0 end) as avg5,
               sum(case statistic when 10 then avg else 0 end) as avg10,
               sum(case statistic when 20 then avg else 0 end) as avg20,
               sum(case statistic when 30 then avg else 0 end) as avg30
        from avg_line
        <where>
            <if test="start != null">
                and date >= #{start}
            </if>
            <if test="end != null">
                and date &lt;= #{end}
            </if>
            <if test="stockCodes != null">
                and stock_code in
                <foreach collection="stockCodes" item="code"
                         open="(" separator="," close=")">
                    #{code}
                </foreach>
            </if>
        </where>
        group by stock_code, date, current
        <if test="limit != null and limit != 0">
            limit #{limit}
        </if>
        <if test="offset != null and offset >= 0">
            offset #{offset}
        </if>
    </select>
</mapper>